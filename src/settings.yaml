# Global acquisition setting
acquisition:
  library: 'autoscript'  # Microscope control library. Possible values: 'AS'
  wd_correction: 7.88010753607e-9   # For imaging angle 38deg: slice_distance * cos(38). For imaging angle 90: slice_distance
  y_correction:  6.15661475326e-9 # For imaging angle 38deg: slice_distance * sin(38). For imaging angle 90: 0
  additive_beam_shift: [0, 0] # Additive beam shift applied in every cycle
  settings_file: 'microscope_settings.yaml' # Actual microscope setting
  variables_to_save: ['position','electron_beam.working_distance','electron_beam.stigmator','electron_beam.lens_alignment',
                      'electron_beam.beam_shift','electron_beam.detector_contrast','electron_beam.detector_brightness',
                      'electron_beam.dwell_time']
  log: True
  log_level: 10 # 10 - debug, 20 - info, 30 - warning, 40 - error, 50 - critical

# Directories
dirs:
  output_images: 'images'
  log: 'logs'
  template_matching: 'templates'

microscope:
  ip_address: '10.56.91.11'  # ASV server address (hydra: 147.251.159.93:7520, hydra2: 147.251.159.93:7521, versa_local: 10.56.91.11)
  stage_tolerance: 1e-7  # Maximal stage error that is considered as ok
  stage_trials: 3  # Number of trials to reach the goal position before raise error
  beam_shift_tolerance: 50.0e-9 # Maximal beam shift error that is considered as ok
  relative_beam_shift_to_stage: [1, 1] # Relative move between bs and stage move (direction is set by code)
  image_name: 'image_acquisition'
  criterion_name: 'image_acquisition'

image:
  - name: 'image_acquisition' # pixel_size: 5.18e-9
    field_of_view: [31.9e-6, 21.2666666667e-6]
    images_line_integration: [1] # li of images acquisition. it is array for multiple acquisition
    bit_depth: 16
    dwell: 1.0e-6
  - name: 'autofunction'
    resolution: [6144, 4096] # must be in standard res
    field_of_view: [31.9e-6, 21.2666666667e-6]
    images_line_integration: [1]
    bit_depth: 8
    dwell: 1.0e-6

criterion_calculation:
  - name: 'image_acquisition'
    border: 0.3 # part of image that does not go to calculation
    tile_size: 3.0e-6 # calculation tile size
    final_resolution: 'min' # how to calculate final resolution from tiles resolution (numpy methods supported)
    final_regions_resolution: 'min' # how to calculate final resolution from different masked regions (numpy methods supported)
    criterion: 'frc_criterion'  # criterion. Values: 'bandpass_criterion', 'bandpass_var_criterion', 'fft_criterion', 'frc_criterion'
    mask_name: 'none'
  - name: 'autofunction'
    border: 0 # part of image that does not go to calculation
    tile_size: 0 # calculation tile size
    final_resolution: 'min' # how to calculate final resolution from tiles resolution (numpy methods supported)
    final_regions_resolution: 'min' # how to calculate final resolution from different masked regions (numpy methods supported)
    criterion: 'bandpass_criterion'  # criterion. Values: 'bandpass_criterion', 'bandpass_var_criterion', 'fft_criterion', 'frc_criterion'
    detail: [ 100.0e-9, 350.0e-9 ] # 20.0e-9, 150.0e-9 for cryo
    mask_name: 'none'

autofunction:
  max_attempts: 8

  af_values:
    - name: 'working_distance - image'
      variable: 'working_distance'
      autofunction: 'StepAutoFunction'  # type of autofunction. Values: 'none', 'AutoFunction', 'LineAutoFunction'
      sweeping_strategy: 'BasicInterleavedSweeping' # values: 'BasicSweeping', 'SpiralSweeping', 'BasicInterleavedSweeping'
      sweeping_range: [ -100.0e-6, 100.0e-6 ] # 10.0e-6 for immersion. The range of the sweeping variable.
      sweeping_max_limits: [ 500.0e-6, 70.0e-3 ] # Limits of sweeping_var
      sweeping_steps: 3 # sweeping steps (number of value variation) (in spiral, it is number of steps per cycle)
      sweeping_total_cycles: 1 # sweeping cycles
      execute: 2 # execute condition - if int = number of slices, if float = image resolution
      image_name: 'autofunction'
      criterion_name: 'autofunction'
      mask_name: 'none'
      delta_x: 0

    - name: 'working_distance - line'
      variable: 'working_distance'
      autofunction: 'LineAutoFunction'  # type of autofunction. Values: 'none', 'AutoFunction', 'LineAutoFunction'
      sweeping_strategy: 'BasicSweeping' # values: 'BasicSweeping', 'SpiralSweeping', 'BasicInterleavedSweeping'
      sweeping_range: [-100.0e-6, 100.0e-6] # 10.0e-6 for immersion. The range of the sweeping variable.
      sweeping_max_limits: [500.0e-6, 70.0e-3] # Limits of sweeping_var
      sweeping_steps: 20 # sweeping steps (number of value variation) (in spiral, it is number of steps per cycle)
      sweeping_total_cycles: 4 # sweeping cycles
      execute: 0 # execute condition - if int = number of slices, if float = image resolution
      image_name: 'autofunction'
      criterion_name: 'autofunction'
      mask_name: 'none'
      delta_x: 0
      pre_imaging_delay: 1
      keep_time: 10
      forbidden_sections: [0]


contrast_brightness:
  function: 'none' # none, acb
  mask_name: 'mask'
  allowed_saturation: 0.01  # allowed portion of pixels in saturated or zeroed pixels
  allowed_minimal_band: 0.5  # allowed minimal band of the whole bit depth
  p_decrease_contrast: 10  # p-constant for decrease contrast. New_contrast -= p_decrease_contrast * max(portion_of_saturated_px, portion_of_zeored_px)
  p_increase_contrast: 10  # p-constant for increase contrast. New_contrast += p_increase_contrast * (1 - image_band)
  p_brightness: 10   # p-constant for brightness. New_bright -= p_brighness * portion_of_saturated_px (saturated or zeroed)


mask:
  - name: 'mask'
    update_mask: True # grab image before in order to calculate mask. If False, last image is selected
    mask_image_li: 32 # line integration for mask acquisition
    min_fraction: 0.1 # minimal fraction of mask to proceed to calculation
    downsampling_factor: 4
    model_path: '/home/pavelkrep/data/deepmib_test/seg_exported'
    patch_size: [128, 128]
    threshold: 0.5
    min_area: 100 # use None for disable
    fill_holes: True
    iterative_training: False

email:
  sender: 'pavel.emcf@gmail.com'
  receiver: 'pavel.krep@gmail.com'
  password_file: 'email_password.txt'

drift_correction:
  type: 'template_matching' # values: 'template_matching', 'mask'
  min_confidence: 0